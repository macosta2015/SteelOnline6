{"ast":null,"code":"\n// import React, { useState } from 'react';\n// import { Box, TextField, Button, Snackbar, Typography, Grid, Container, Alert } from '@mui/material';\n\n// function EmailList({ onEmailAdded }) {\n//   const [email, setEmail] = useState('');\n//   const [error, setError] = useState(null);\n//   const [openSnackbar, setOpenSnackbar] = useState(false);\n\n//   const validateEmail = (email) => {\n//     const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//     return re.test(String(email).toLowerCase());\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!validateEmail(email)) {\n//       setError('Please enter a valid email address.');\n//       return;\n//     }\n\n//     setError(null);\n\n//     try {\n//       const response = await fetch('http://localhost:5001/saveEmail', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ email }),\n//       });\n\n//       if (response.ok) {\n//         setOpenSnackbar(true);\n//         setEmail(''); // Clear the input\n//         onEmailAdded(); // Notify parent to refresh the email list\n//       } else {\n//         throw new Error('Error saving email');\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setError('Error saving email');\n//     }\n//   };\n\n//   const handleCloseSnackbar = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setOpenSnackbar(false);\n//   };\n\n//   return (\n//     <Container maxWidth=\"sm\" sx={{ mt: 4 }}>\n//       <Grid container justifyContent=\"center\" alignItems=\"center\">\n//         <Grid item xs={12}>\n//           <Box sx={{ padding: 3, borderRadius: 2, boxShadow: 3, backgroundColor: '#f9f9f9' }}>\n//             <Typography variant=\"h5\" align=\"center\" gutterBottom>\n//               Add Email to List\n//             </Typography>\n\n//             <form onSubmit={handleSubmit}>\n//               <TextField\n//                 fullWidth\n//                 label=\"Enter Email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 error={!!error}\n//                 helperText={error}\n//                 variant=\"outlined\"\n//                 sx={{ mb: 2 }}\n//               />\n//               <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n//                 Add Email\n//               </Button>\n//             </form>\n\n//             {/* Snackbar for success */}\n//             <Snackbar\n//               open={openSnackbar}\n//               autoHideDuration={6000}\n//               onClose={handleCloseSnackbar}\n//               anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n//             >\n//               <Alert onClose={handleCloseSnackbar} severity=\"success\">\n//                 Email added successfully!\n//               </Alert>\n//             </Snackbar>\n//           </Box>\n//         </Grid>\n//       </Grid>\n//     </Container>\n//   );\n// }\n\n// export default EmailList;","map":{"version":3,"names":[],"sources":["/Users/marioacosta/Documents/GitHub/SteelOnline3/frontend/src/components/email/email.js"],"sourcesContent":["\n// import React, { useState } from 'react';\n// import { Box, TextField, Button, Snackbar, Typography, Grid, Container, Alert } from '@mui/material';\n\n// function EmailList({ onEmailAdded }) {\n//   const [email, setEmail] = useState('');\n//   const [error, setError] = useState(null);\n//   const [openSnackbar, setOpenSnackbar] = useState(false);\n\n//   const validateEmail = (email) => {\n//     const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//     return re.test(String(email).toLowerCase());\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!validateEmail(email)) {\n//       setError('Please enter a valid email address.');\n//       return;\n//     }\n\n//     setError(null);\n\n//     try {\n//       const response = await fetch('http://localhost:5001/saveEmail', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ email }),\n//       });\n\n//       if (response.ok) {\n//         setOpenSnackbar(true);\n//         setEmail(''); // Clear the input\n//         onEmailAdded(); // Notify parent to refresh the email list\n//       } else {\n//         throw new Error('Error saving email');\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setError('Error saving email');\n//     }\n//   };\n\n//   const handleCloseSnackbar = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setOpenSnackbar(false);\n//   };\n\n//   return (\n//     <Container maxWidth=\"sm\" sx={{ mt: 4 }}>\n//       <Grid container justifyContent=\"center\" alignItems=\"center\">\n//         <Grid item xs={12}>\n//           <Box sx={{ padding: 3, borderRadius: 2, boxShadow: 3, backgroundColor: '#f9f9f9' }}>\n//             <Typography variant=\"h5\" align=\"center\" gutterBottom>\n//               Add Email to List\n//             </Typography>\n\n//             <form onSubmit={handleSubmit}>\n//               <TextField\n//                 fullWidth\n//                 label=\"Enter Email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 error={!!error}\n//                 helperText={error}\n//                 variant=\"outlined\"\n//                 sx={{ mb: 2 }}\n//               />\n//               <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n//                 Add Email\n//               </Button>\n//             </form>\n\n//             {/* Snackbar for success */}\n//             <Snackbar\n//               open={openSnackbar}\n//               autoHideDuration={6000}\n//               onClose={handleCloseSnackbar}\n//               anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n//             >\n//               <Alert onClose={handleCloseSnackbar} severity=\"success\">\n//                 Email added successfully!\n//               </Alert>\n//             </Snackbar>\n//           </Box>\n//         </Grid>\n//       </Grid>\n//     </Container>\n//   );\n// }\n\n// export default EmailList;\n\n"],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}