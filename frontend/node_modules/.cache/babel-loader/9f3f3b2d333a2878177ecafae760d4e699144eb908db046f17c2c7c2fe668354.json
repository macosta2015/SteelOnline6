{"ast":null,"code":"\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { Grid, Paper, Typography, Button, CircularProgress, TextField } from '@mui/material';\n\n// function EmailAttachmentForm() {\n//     const [file, setFile] = useState();\n//     const [email, setEmail] = useState('');\n//     const [emails, setEmails] = useState([]);\n//     const [uploadedFile, setUploadedFile] = useState();\n//     const [error, setError] = useState();\n//     const [loading, setLoading] = useState(false);\n\n//     // Handle file selection and validation\n//     function handleFileChange(event) {\n//         const selectedFile = event.target.files[0];\n//         if (!selectedFile) return;\n\n//         // Validate file size and type\n//         if (selectedFile.size > 5000000) {\n//             setError(new Error('File size should be less than 5MB.'));\n//             return;\n//         }\n\n//         if (!['image/jpeg', 'image/png'].includes(selectedFile.type)) {\n//             setError(new Error('Only JPEG or PNG files are allowed.'));\n//             return;\n//         }\n\n//         setError(null);\n//         setFile(selectedFile);\n//     }\n\n//     // Handle email input and add it to the email list\n//     function handleEmailChange(event) {\n//         setEmail(event.target.value);\n//     }\n\n//     function handleAddEmail() {\n//         if (email && !emails.includes(email)) {\n//             setEmails([...emails, email]);\n//             setEmail('');\n//         }\n//     }\n\n//     // Handle file upload and email sending\n//     function handleSubmit(event) {\n//         event.preventDefault();\n\n//         if (!file || emails.length === 0) {\n//             setError(new Error('Please select a file and enter at least one email.'));\n//             return;\n//         }\n\n//         setLoading(true);\n\n//         const formData = new FormData();\n//         formData.append('file', file);\n//         formData.append('fileName', file.name);\n\n//         axios.post('http://localhost:5001/uploadFile', formData, {\n//             headers: { 'content-type': 'multipart/form-data' },\n//         })\n//             .then((response) => {\n//                 setUploadedFile(response.data.file);\n//                 setLoading(false);\n//                 // Here you would call EmailJS to send the email with the uploaded file\n//             })\n//             .catch((error) => {\n//                 setError(new Error('Error uploading file: ' + error.message));\n//                 setLoading(false);\n//             });\n//     }\n\n//     return (\n//         <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//             <Grid item xs={12} sm={8} md={6} lg={4}>\n//                 <Paper elevation={3} sx={{ p: 3, borderRadius: 2, backgroundColor: '#f9f9f9' }}>\n//                     <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 'bold', textAlign: 'center' }}>\n//                         Send Attachment via Email\n//                     </Typography>\n\n//                     <form onSubmit={handleSubmit}>\n//                         <TextField\n//                             fullWidth\n//                             label=\"Email\"\n//                             value={email}\n//                             onChange={handleEmailChange}\n//                             variant=\"outlined\"\n//                             margin=\"normal\"\n//                         />\n//                         <Button variant=\"contained\" color=\"primary\" onClick={handleAddEmail} fullWidth sx={{ mb: 2 }}>\n//                             Add Email\n//                         </Button>\n\n//                         <Typography variant=\"body2\" gutterBottom sx={{ mb: 2 }}>\n//                             Emails: {emails.join(', ')}\n//                         </Typography>\n\n//                         <Button variant=\"outlined\" component=\"label\" fullWidth sx={{ mb: 3 }}>\n//                             Select File\n//                             <input type=\"file\" hidden onChange={handleFileChange} />\n//                         </Button>\n\n//                         <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n//                             Upload & Send Email\n//                         </Button>\n\n//                         {loading && <CircularProgress sx={{ mt: 2 }} />}\n//                         {uploadedFile && <Typography sx={{ mt: 2 }}>File uploaded successfully!</Typography>}\n//                         {error && <Typography color=\"error\" sx={{ mt: 2 }}>{error.message}</Typography>}\n//                     </form>\n//                 </Paper>\n//             </Grid>\n//         </Grid>\n//     );\n// }\n\n// export default EmailAttachmentForm;","map":{"version":3,"names":[],"sources":["/Users/marioacosta/Documents/GitHub/SteelsOnline2/frontend/src/components/email/emailsender.js"],"sourcesContent":["\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { Grid, Paper, Typography, Button, CircularProgress, TextField } from '@mui/material';\n\n// function EmailAttachmentForm() {\n//     const [file, setFile] = useState();\n//     const [email, setEmail] = useState('');\n//     const [emails, setEmails] = useState([]);\n//     const [uploadedFile, setUploadedFile] = useState();\n//     const [error, setError] = useState();\n//     const [loading, setLoading] = useState(false);\n\n//     // Handle file selection and validation\n//     function handleFileChange(event) {\n//         const selectedFile = event.target.files[0];\n//         if (!selectedFile) return;\n\n//         // Validate file size and type\n//         if (selectedFile.size > 5000000) {\n//             setError(new Error('File size should be less than 5MB.'));\n//             return;\n//         }\n\n//         if (!['image/jpeg', 'image/png'].includes(selectedFile.type)) {\n//             setError(new Error('Only JPEG or PNG files are allowed.'));\n//             return;\n//         }\n\n//         setError(null);\n//         setFile(selectedFile);\n//     }\n\n//     // Handle email input and add it to the email list\n//     function handleEmailChange(event) {\n//         setEmail(event.target.value);\n//     }\n\n//     function handleAddEmail() {\n//         if (email && !emails.includes(email)) {\n//             setEmails([...emails, email]);\n//             setEmail('');\n//         }\n//     }\n\n//     // Handle file upload and email sending\n//     function handleSubmit(event) {\n//         event.preventDefault();\n\n//         if (!file || emails.length === 0) {\n//             setError(new Error('Please select a file and enter at least one email.'));\n//             return;\n//         }\n\n//         setLoading(true);\n\n//         const formData = new FormData();\n//         formData.append('file', file);\n//         formData.append('fileName', file.name);\n\n//         axios.post('http://localhost:5001/uploadFile', formData, {\n//             headers: { 'content-type': 'multipart/form-data' },\n//         })\n//             .then((response) => {\n//                 setUploadedFile(response.data.file);\n//                 setLoading(false);\n//                 // Here you would call EmailJS to send the email with the uploaded file\n//             })\n//             .catch((error) => {\n//                 setError(new Error('Error uploading file: ' + error.message));\n//                 setLoading(false);\n//             });\n//     }\n\n//     return (\n//         <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//             <Grid item xs={12} sm={8} md={6} lg={4}>\n//                 <Paper elevation={3} sx={{ p: 3, borderRadius: 2, backgroundColor: '#f9f9f9' }}>\n//                     <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 'bold', textAlign: 'center' }}>\n//                         Send Attachment via Email\n//                     </Typography>\n\n//                     <form onSubmit={handleSubmit}>\n//                         <TextField\n//                             fullWidth\n//                             label=\"Email\"\n//                             value={email}\n//                             onChange={handleEmailChange}\n//                             variant=\"outlined\"\n//                             margin=\"normal\"\n//                         />\n//                         <Button variant=\"contained\" color=\"primary\" onClick={handleAddEmail} fullWidth sx={{ mb: 2 }}>\n//                             Add Email\n//                         </Button>\n\n//                         <Typography variant=\"body2\" gutterBottom sx={{ mb: 2 }}>\n//                             Emails: {emails.join(', ')}\n//                         </Typography>\n\n//                         <Button variant=\"outlined\" component=\"label\" fullWidth sx={{ mb: 3 }}>\n//                             Select File\n//                             <input type=\"file\" hidden onChange={handleFileChange} />\n//                         </Button>\n\n//                         <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n//                             Upload & Send Email\n//                         </Button>\n\n//                         {loading && <CircularProgress sx={{ mt: 2 }} />}\n//                         {uploadedFile && <Typography sx={{ mt: 2 }}>File uploaded successfully!</Typography>}\n//                         {error && <Typography color=\"error\" sx={{ mt: 2 }}>{error.message}</Typography>}\n//                     </form>\n//                 </Paper>\n//             </Grid>\n//         </Grid>\n//     );\n// }\n\n// export default EmailAttachmentForm;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}