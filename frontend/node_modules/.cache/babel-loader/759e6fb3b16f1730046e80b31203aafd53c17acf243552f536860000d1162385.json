{"ast":null,"code":"var _jsxFileName = \"/Users/marioacosta/Documents/GitHub/SteelOnline3/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Box, Button, Card, CardMedia, CardContent, Typography, Snackbar, Grid, Container } from '@mui/material';\nimport MuiAlert from '@mui/material/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\nfunction App() {\n  _s();\n  const [file, setFile] = useState();\n  const [uploadedFile, setUploadedFile] = useState();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  // Handle file selection and validation\n  function handleChange(event) {\n    const selectedFile = event.target.files[0];\n    if (selectedFile.size > 5000000) {\n      // 5MB limit\n      setError(new Error('File size should be less than 5MB.'));\n      return;\n    }\n    if (!['image/jpeg', 'image/png'].includes(selectedFile.type)) {\n      setError(new Error('Only JPEG or PNG files are allowed.'));\n      return;\n    }\n    setError(null);\n    setFile(selectedFile);\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setUploadedFile(reader.result);\n    };\n    reader.readAsDataURL(selectedFile);\n  }\n\n  // Handle file upload\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!file) {\n      setError(new Error('Please select a file to upload.'));\n      return;\n    }\n    setLoading(true);\n    const url = 'http://localhost:5001/uploadFile';\n    const formData = new FormData();\n    formData.append('file', file);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    axios.post(url, formData, config).then(response => {\n      setUploadedFile(`http://localhost:5001${response.data.file}`);\n      setLoading(false);\n      setOpenSnackbar(true);\n    }).catch(error => {\n      setLoading(false);\n      if (error.response) {\n        setError(new Error('Error uploading file: ' + error.response.data.message));\n      } else {\n        setError(new Error('Error uploading file: ' + error.message));\n      }\n    });\n  }\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        lg: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            align: \"center\",\n            gutterBottom: true,\n            children: \"UPLOAD STEEL QUOTES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              accept: \"image/jpeg,image/png\",\n              style: {\n                display: 'none'\n              },\n              id: \"upload-file\",\n              type: \"file\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"upload-file\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                component: \"span\",\n                sx: {\n                  mt: 2,\n                  mb: 2,\n                  width: '100%'\n                },\n                children: \"Choose File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), uploadedFile && /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                mt: 3,\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                component: \"img\",\n                height: \"400\",\n                image: uploadedFile,\n                alt: \"Uploaded content\",\n                sx: {\n                  objectFit: 'cover'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  color: \"text.secondary\",\n                  children: \"Uploaded File Preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              sx: {\n                mt: 3,\n                width: '100%'\n              },\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          sx: {\n            mt: 2\n          },\n          children: \"Uploading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"error\",\n          align: \"center\",\n          sx: {\n            mt: 2\n          },\n          children: [\"Error: \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: openSnackbar,\n          autoHideDuration: 6000,\n          onClose: handleCloseSnackbar,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            onClose: handleCloseSnackbar,\n            severity: \"success\",\n            children: \"File uploaded successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Mp9o3ornw3d+16qTYFd7Qz6qVtk=\");\n_c3 = App;\nexport default App;\n\n// import './App.css';\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { Box, Button, Card, CardMedia, CardContent, Typography, Snackbar, Grid } from '@mui/material';\n\n// import MuiAlert from '@mui/material/Alert';\n\n// const Alert = React.forwardRef(function Alert(props, ref) {\n//   return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n// });\n\n// function App() {\n//   const [file, setFile] = useState();\n//   const [uploadedFile, setUploadedFile] = useState();\n//   const [error, setError] = useState();\n//   const [loading, setLoading] = useState(false);\n//   const [openSnackbar, setOpenSnackbar] = useState(false);\n\n//   // Handle file selection and validation\n//   function handleChange(event) {\n//     const selectedFile = event.target.files[0];\n\n//     if (selectedFile.size > 5000000) { // 5MB limit\n//       setError(new Error('File size should be less than 5MB.'));\n//       return;\n//     }\n\n//     if (!['image/jpeg', 'image/png'].includes(selectedFile.type)) {\n//       setError(new Error('Only JPEG or PNG files are allowed.'));\n//       return;\n//     }\n\n//     setError(null);\n//     setFile(selectedFile);\n\n//     const reader = new FileReader();\n//     reader.onloadend = () => {\n//       setUploadedFile(reader.result);\n//     };\n//     reader.readAsDataURL(selectedFile);\n//   }\n\n//   // Handle file upload\n//   function handleSubmit(event) {\n//     event.preventDefault();\n\n//     if (!file) {\n//       setError(new Error('Please select a file to upload.'));\n//       return;\n//     }\n\n//     setLoading(true);\n//     const url = 'http://localhost:5001/uploadFile';\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     const config = {\n//       headers: {\n//         'content-type': 'multipart/form-data',\n//       },\n//     };\n\n//     axios.post(url, formData, config)\n//       .then((response) => {\n//         setUploadedFile(`http://localhost:5001${response.data.file}`);\n//         setLoading(false);\n//         setOpenSnackbar(true);\n//       })\n//       .catch((error) => {\n//         setLoading(false);\n//         if (error.response) {\n//           setError(new Error('Error uploading file: ' + error.response.data.message));\n//         } else {\n//           setError(new Error('Error uploading file: ' + error.message));\n//         }\n//       });\n//   }\n\n//   const handleCloseSnackbar = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setOpenSnackbar(false);\n//   };\n\n//   return (\n//     <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//       <Grid item xs={12} sm={8} md={6} lg={4}>\n//         <form onSubmit={handleSubmit}>\n//           <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//             UPLOAD STEEL QUOTES\n//           </Typography>\n\n//           <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n//             <input\n//               accept=\"image/jpeg,image/png\"\n//               style={{ display: 'none' }}\n//               id=\"upload-file\"\n//               type=\"file\"\n//               onChange={handleChange}\n//             />\n//             <label htmlFor=\"upload-file\">\n//               <Button variant=\"contained\" component=\"span\" sx={{ mt: 2, mb: 2, width: '100%' }}>\n//                 Choose File\n//               </Button>\n//             </label>\n\n//             {/* Show the uploaded file preview immediately after selection */}\n//             {uploadedFile && (\n//               <Card sx={{ mt: 3, width: '100%' }}>\n//                 <CardMedia\n//                   component=\"img\"\n//                   height=\"400\"\n//                   image={uploadedFile}\n//                   alt=\"Uploaded content\"\n//                   sx={{ objectFit: 'cover' }}\n//                 />\n//                 <CardContent>\n//                   <Typography variant=\"body1\" color=\"text.secondary\">\n//                     Uploaded File Preview\n//                   </Typography>\n//                 </CardContent>\n//               </Card>\n//             )}\n\n//             <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ mt: 3, width: '100%' }}>\n//               Upload\n//             </Button>\n//           </Box>\n//         </form>\n\n//         {/* Loading indicator */}\n//         {loading && <Typography variant=\"body1\" align=\"center\">Uploading...</Typography>}\n\n//         {/* Display error message if an error occurs */}\n//         {error && <Typography variant=\"body1\" color=\"error\" align=\"center\">Error: {error.message}</Typography>}\n\n//         {/* Snackbar for success message */}\n//         <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\n//           <Alert onClose={handleCloseSnackbar} severity=\"success\">\n//             File uploaded successfully!\n//           </Alert>\n//         </Snackbar>\n//       </Grid>\n//     </Grid>\n//   );\n// }\n\n// export default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","axios","Box","Button","Card","CardMedia","CardContent","Typography","Snackbar","Grid","Container","MuiAlert","jsxDEV","_jsxDEV","Alert","forwardRef","_c","props","ref","elevation","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c2","App","_s","file","setFile","uploadedFile","setUploadedFile","error","setError","loading","setLoading","openSnackbar","setOpenSnackbar","handleChange","event","selectedFile","target","files","size","Error","includes","type","reader","FileReader","onloadend","result","readAsDataURL","handleSubmit","preventDefault","url","formData","FormData","append","config","headers","post","then","response","data","catch","message","handleCloseSnackbar","reason","maxWidth","sx","mt","children","container","justifyContent","alignItems","item","xs","md","lg","onSubmit","align","gutterBottom","display","flexDirection","accept","style","id","onChange","htmlFor","component","mb","width","height","image","alt","objectFit","color","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","_c3","$RefreshReg$"],"sources":["/Users/marioacosta/Documents/GitHub/SteelOnline3/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Box, Button, Card, CardMedia, CardContent, Typography, Snackbar, Grid, Container } from '@mui/material';\nimport MuiAlert from '@mui/material/Alert';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nfunction App() {\n  const [file, setFile] = useState();\n  const [uploadedFile, setUploadedFile] = useState();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  // Handle file selection and validation\n  function handleChange(event) {\n    const selectedFile = event.target.files[0];\n\n    if (selectedFile.size > 5000000) { // 5MB limit\n      setError(new Error('File size should be less than 5MB.'));\n      return;\n    }\n\n    if (!['image/jpeg', 'image/png'].includes(selectedFile.type)) {\n      setError(new Error('Only JPEG or PNG files are allowed.'));\n      return;\n    }\n\n    setError(null);\n    setFile(selectedFile);\n\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setUploadedFile(reader.result);\n    };\n    reader.readAsDataURL(selectedFile);\n  }\n\n  // Handle file upload\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (!file) {\n      setError(new Error('Please select a file to upload.'));\n      return;\n    }\n\n    setLoading(true);\n    const url = 'http://localhost:5001/uploadFile';\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    };\n\n    axios.post(url, formData, config)\n      .then((response) => {\n        setUploadedFile(`http://localhost:5001${response.data.file}`);\n        setLoading(false);\n        setOpenSnackbar(true);\n      })\n      .catch((error) => {\n        setLoading(false);\n        if (error.response) {\n          setError(new Error('Error uploading file: ' + error.response.data.message));\n        } else {\n          setError(new Error('Error uploading file: ' + error.message));\n        }\n      });\n  }\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n        <Grid item xs={12} md={8} lg={6}>\n          <form onSubmit={handleSubmit}>\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\n              UPLOAD STEEL QUOTES\n            </Typography>\n\n            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <input\n                accept=\"image/jpeg,image/png\"\n                style={{ display: 'none' }}\n                id=\"upload-file\"\n                type=\"file\"\n                onChange={handleChange}\n              />\n              <label htmlFor=\"upload-file\">\n                <Button variant=\"contained\" component=\"span\" sx={{ mt: 2, mb: 2, width: '100%' }}>\n                  Choose File\n                </Button>\n              </label>\n\n              {/* Show the uploaded file preview immediately after selection */}\n              {uploadedFile && (\n                <Card sx={{ mt: 3, width: '100%' }}>\n                  <CardMedia\n                    component=\"img\"\n                    height=\"400\"\n                    image={uploadedFile}\n                    alt=\"Uploaded content\"\n                    sx={{ objectFit: 'cover' }}\n                  />\n                  <CardContent>\n                    <Typography variant=\"body1\" color=\"text.secondary\">\n                      Uploaded File Preview\n                    </Typography>\n                  </CardContent>\n                </Card>\n              )}\n\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ mt: 3, width: '100%' }}>\n                Upload\n              </Button>\n            </Box>\n          </form>\n\n          {/* Loading indicator */}\n          {loading && (\n            <Typography variant=\"body1\" align=\"center\" sx={{ mt: 2 }}>\n              Uploading...\n            </Typography>\n          )}\n\n          {/* Display error message if an error occurs */}\n          {error && (\n            <Typography variant=\"body1\" color=\"error\" align=\"center\" sx={{ mt: 2 }}>\n              Error: {error.message}\n            </Typography>\n          )}\n\n          {/* Snackbar for success message */}\n          <Snackbar\n            open={openSnackbar}\n            autoHideDuration={6000}\n            onClose={handleCloseSnackbar}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n          >\n            <Alert onClose={handleCloseSnackbar} severity=\"success\">\n              File uploaded successfully!\n            </Alert>\n          </Snackbar>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n\n\n// import './App.css';\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { Box, Button, Card, CardMedia, CardContent, Typography, Snackbar, Grid } from '@mui/material';\n\n// import MuiAlert from '@mui/material/Alert';\n\n// const Alert = React.forwardRef(function Alert(props, ref) {\n//   return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n// });\n\n// function App() {\n//   const [file, setFile] = useState();\n//   const [uploadedFile, setUploadedFile] = useState();\n//   const [error, setError] = useState();\n//   const [loading, setLoading] = useState(false);\n//   const [openSnackbar, setOpenSnackbar] = useState(false);\n\n//   // Handle file selection and validation\n//   function handleChange(event) {\n//     const selectedFile = event.target.files[0];\n\n//     if (selectedFile.size > 5000000) { // 5MB limit\n//       setError(new Error('File size should be less than 5MB.'));\n//       return;\n//     }\n\n//     if (!['image/jpeg', 'image/png'].includes(selectedFile.type)) {\n//       setError(new Error('Only JPEG or PNG files are allowed.'));\n//       return;\n//     }\n\n//     setError(null);\n//     setFile(selectedFile);\n\n//     const reader = new FileReader();\n//     reader.onloadend = () => {\n//       setUploadedFile(reader.result);\n//     };\n//     reader.readAsDataURL(selectedFile);\n//   }\n\n//   // Handle file upload\n//   function handleSubmit(event) {\n//     event.preventDefault();\n\n//     if (!file) {\n//       setError(new Error('Please select a file to upload.'));\n//       return;\n//     }\n\n//     setLoading(true);\n//     const url = 'http://localhost:5001/uploadFile';\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     const config = {\n//       headers: {\n//         'content-type': 'multipart/form-data',\n//       },\n//     };\n\n//     axios.post(url, formData, config)\n//       .then((response) => {\n//         setUploadedFile(`http://localhost:5001${response.data.file}`);\n//         setLoading(false);\n//         setOpenSnackbar(true);\n//       })\n//       .catch((error) => {\n//         setLoading(false);\n//         if (error.response) {\n//           setError(new Error('Error uploading file: ' + error.response.data.message));\n//         } else {\n//           setError(new Error('Error uploading file: ' + error.message));\n//         }\n//       });\n//   }\n\n//   const handleCloseSnackbar = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setOpenSnackbar(false);\n//   };\n\n//   return (\n//     <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//       <Grid item xs={12} sm={8} md={6} lg={4}>\n//         <form onSubmit={handleSubmit}>\n//           <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//             UPLOAD STEEL QUOTES\n//           </Typography>\n\n//           <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n//             <input\n//               accept=\"image/jpeg,image/png\"\n//               style={{ display: 'none' }}\n//               id=\"upload-file\"\n//               type=\"file\"\n//               onChange={handleChange}\n//             />\n//             <label htmlFor=\"upload-file\">\n//               <Button variant=\"contained\" component=\"span\" sx={{ mt: 2, mb: 2, width: '100%' }}>\n//                 Choose File\n//               </Button>\n//             </label>\n\n//             {/* Show the uploaded file preview immediately after selection */}\n//             {uploadedFile && (\n//               <Card sx={{ mt: 3, width: '100%' }}>\n//                 <CardMedia\n//                   component=\"img\"\n//                   height=\"400\"\n//                   image={uploadedFile}\n//                   alt=\"Uploaded content\"\n//                   sx={{ objectFit: 'cover' }}\n//                 />\n//                 <CardContent>\n//                   <Typography variant=\"body1\" color=\"text.secondary\">\n//                     Uploaded File Preview\n//                   </Typography>\n//                 </CardContent>\n//               </Card>\n//             )}\n\n//             <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ mt: 3, width: '100%' }}>\n//               Upload\n//             </Button>\n//           </Box>\n//         </form>\n\n//         {/* Loading indicator */}\n//         {loading && <Typography variant=\"body1\" align=\"center\">Uploading...</Typography>}\n\n//         {/* Display error message if an error occurs */}\n//         {error && <Typography variant=\"body1\" color=\"error\" align=\"center\">Error: {error.message}</Typography>}\n\n//         {/* Snackbar for success message */}\n//         <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\n//           <Alert onClose={handleCloseSnackbar} severity=\"success\">\n//             File uploaded successfully!\n//           </Alert>\n//         </Snackbar>\n//       </Grid>\n//     </Grid>\n//   );\n// }\n\n// export default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}