{"ast":null,"code":"var _jsxFileName = \"/Users/marioacosta/Documents/GitHub/SteelsOnline2/frontend/src/components/email/emailsender.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Grid, Paper, Typography, Button, CircularProgress, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailAttachmentForm() {\n  _s();\n  const [file, setFile] = useState();\n  const [uploadedFileUrl, setUploadedFileUrl] = useState('');\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n\n  // Handle file selection and validation\n  function handleFileChange(event) {\n    const selectedFile = event.target.files[0];\n    if (!selectedFile) return;\n\n    // Validate file size and type\n    if (selectedFile.size > 5000000) {\n      setError(new Error('File size should be less than 5MB.'));\n      return;\n    }\n    if (!['image/jpeg', 'image/png'].includes(selectedFile.type)) {\n      setError(new Error('Only JPEG or PNG files are allowed.'));\n      return;\n    }\n    setError(null);\n    setFile(selectedFile);\n  }\n\n  // Handle file upload and email sending\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!file) {\n      setError(new Error('Please select a file.'));\n      return;\n    }\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('fileName', file.name);\n\n    // Upload file to the backend\n    axios.post('http://localhost:5001/uploadFile', formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => {\n      const uploadedFilePath = response.data.file; // Get the file path from backend\n      setUploadedFileUrl(uploadedFilePath);\n      setLoading(false);\n      console.log('File uploaded and backend will handle sending emails');\n    }).catch(error => {\n      setError(new Error('Error uploading file: ' + error.message));\n      setLoading(false);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    sx: {\n      height: '100vh',\n      padding: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 6,\n      lg: 4,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 3,\n          borderRadius: 2,\n          backgroundColor: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mb: 2,\n            fontWeight: 'bold',\n            textAlign: 'center'\n          },\n          children: \"Send Attachment via Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            component: \"label\",\n            fullWidth: true,\n            sx: {\n              mb: 3\n            },\n            children: [\"Select File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              hidden: true,\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            children: \"Upload & Send Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            sx: {\n              mt: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }, this), uploadedFileUrl && /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 2\n            },\n            children: \"File uploaded successfully! Emails will be sent by backend.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 45\n          }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            sx: {\n              mt: 2\n            },\n            children: error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(EmailAttachmentForm, \"Kbt7iXE9eXb5i9Kge6E4CclJcb4=\");\n_c = EmailAttachmentForm;\nexport default EmailAttachmentForm;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { Grid, Paper, Typography, Button, CircularProgress, TextField } from '@mui/material';\n\n// function EmailAttachmentForm() {\n//     const [file, setFile] = useState();\n//     const [email, setEmail] = useState('');\n//     const [emails, setEmails] = useState([]);\n//     const [uploadedFile, setUploadedFile] = useState();\n//     const [error, setError] = useState();\n//     const [loading, setLoading] = useState(false);\n\n//     // Handle file selection and validation\n//     function handleFileChange(event) {\n//         const selectedFile = event.target.files[0];\n//         if (!selectedFile) return;\n\n//         // Validate file size and type\n//         if (selectedFile.size > 5000000) {\n//             setError(new Error('File size should be less than 5MB.'));\n//             return;\n//         }\n\n//         if (!['image/jpeg', 'image/png'].includes(selectedFile.type)) {\n//             setError(new Error('Only JPEG or PNG files are allowed.'));\n//             return;\n//         }\n\n//         setError(null);\n//         setFile(selectedFile);\n//     }\n\n//     // Handle email input and add it to the email list\n//     function handleEmailChange(event) {\n//         setEmail(event.target.value);\n//     }\n\n//     function handleAddEmail() {\n//         if (email && !emails.includes(email)) {\n//             setEmails([...emails, email]);\n//             setEmail('');\n//         }\n//     }\n\n//     // Handle file upload and email sending\n//     function handleSubmit(event) {\n//         event.preventDefault();\n\n//         if (!file || emails.length === 0) {\n//             setError(new Error('Please select a file and enter at least one email.'));\n//             return;\n//         }\n\n//         setLoading(true);\n\n//         const formData = new FormData();\n//         formData.append('file', file);\n//         formData.append('fileName', file.name);\n\n//         axios.post('http://localhost:5001/uploadFile', formData, {\n//             headers: { 'content-type': 'multipart/form-data' },\n//         })\n//             .then((response) => {\n//                 setUploadedFile(response.data.file);\n//                 setLoading(false);\n//                 // Here you would call EmailJS to send the email with the uploaded file\n//             })\n//             .catch((error) => {\n//                 setError(new Error('Error uploading file: ' + error.message));\n//                 setLoading(false);\n//             });\n//     }\n\n//     return (\n//         <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//             <Grid item xs={12} sm={8} md={6} lg={4}>\n//                 <Paper elevation={3} sx={{ p: 3, borderRadius: 2, backgroundColor: '#f9f9f9' }}>\n//                     <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 'bold', textAlign: 'center' }}>\n//                         Send Attachment via Email\n//                     </Typography>\n\n//                     <form onSubmit={handleSubmit}>\n//                         <TextField\n//                             fullWidth\n//                             label=\"Email\"\n//                             value={email}\n//                             onChange={handleEmailChange}\n//                             variant=\"outlined\"\n//                             margin=\"normal\"\n//                         />\n//                         <Button variant=\"contained\" color=\"primary\" onClick={handleAddEmail} fullWidth sx={{ mb: 2 }}>\n//                             Add Email\n//                         </Button>\n\n//                         <Typography variant=\"body2\" gutterBottom sx={{ mb: 2 }}>\n//                             Emails: {emails.join(', ')}\n//                         </Typography>\n\n//                         <Button variant=\"outlined\" component=\"label\" fullWidth sx={{ mb: 3 }}>\n//                             Select File\n//                             <input type=\"file\" hidden onChange={handleFileChange} />\n//                         </Button>\n\n//                         <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n//                             Upload & Send Email\n//                         </Button>\n\n//                         {loading && <CircularProgress sx={{ mt: 2 }} />}\n//                         {uploadedFile && <Typography sx={{ mt: 2 }}>File uploaded successfully!</Typography>}\n//                         {error && <Typography color=\"error\" sx={{ mt: 2 }}>{error.message}</Typography>}\n//                     </form>\n//                 </Paper>\n//             </Grid>\n//         </Grid>\n//     );\n// }\n\n// export default EmailAttachmentForm;\nvar _c;\n$RefreshReg$(_c, \"EmailAttachmentForm\");","map":{"version":3,"names":["React","useState","axios","Grid","Paper","Typography","Button","CircularProgress","TextField","jsxDEV","_jsxDEV","EmailAttachmentForm","_s","file","setFile","uploadedFileUrl","setUploadedFileUrl","error","setError","loading","setLoading","handleFileChange","event","selectedFile","target","files","size","Error","includes","type","handleSubmit","preventDefault","formData","FormData","append","name","post","headers","then","response","uploadedFilePath","data","console","log","catch","message","container","justifyContent","alignItems","sx","height","padding","children","item","xs","sm","md","lg","elevation","p","borderRadius","backgroundColor","variant","mb","fontWeight","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","component","fullWidth","hidden","onChange","color","mt","_c","$RefreshReg$"],"sources":["/Users/marioacosta/Documents/GitHub/SteelsOnline2/frontend/src/components/email/emailsender.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Grid, Paper, Typography, Button, CircularProgress, TextField } from '@mui/material';\n\nfunction EmailAttachmentForm() {\n    const [file, setFile] = useState();\n    const [uploadedFileUrl, setUploadedFileUrl] = useState('');\n    const [error, setError] = useState();\n    const [loading, setLoading] = useState(false);\n\n    // Handle file selection and validation\n    function handleFileChange(event) {\n        const selectedFile = event.target.files[0];\n        if (!selectedFile) return;\n\n        // Validate file size and type\n        if (selectedFile.size > 5000000) {\n            setError(new Error('File size should be less than 5MB.'));\n            return;\n        }\n\n        if (!['image/jpeg', 'image/png'].includes(selectedFile.type)) {\n            setError(new Error('Only JPEG or PNG files are allowed.'));\n            return;\n        }\n\n        setError(null);\n        setFile(selectedFile);\n    }\n\n    // Handle file upload and email sending\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        if (!file) {\n            setError(new Error('Please select a file.'));\n            return;\n        }\n\n        setLoading(true);\n\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('fileName', file.name);\n\n        // Upload file to the backend\n        axios.post('http://localhost:5001/uploadFile', formData, {\n            headers: { 'content-type': 'multipart/form-data' },\n        })\n            .then((response) => {\n                const uploadedFilePath = response.data.file; // Get the file path from backend\n                setUploadedFileUrl(uploadedFilePath);\n                setLoading(false);\n\n                console.log('File uploaded and backend will handle sending emails');\n            })\n            .catch((error) => {\n                setError(new Error('Error uploading file: ' + error.message));\n                setLoading(false);\n            });\n    }\n\n    return (\n        <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n            <Grid item xs={12} sm={8} md={6} lg={4}>\n                <Paper elevation={3} sx={{ p: 3, borderRadius: 2, backgroundColor: '#f9f9f9' }}>\n                    <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 'bold', textAlign: 'center' }}>\n                        Send Attachment via Email\n                    </Typography>\n\n                    <form onSubmit={handleSubmit}>\n                        <Button variant=\"outlined\" component=\"label\" fullWidth sx={{ mb: 3 }}>\n                            Select File\n                            <input type=\"file\" hidden onChange={handleFileChange} />\n                        </Button>\n\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n                            Upload & Send Email\n                        </Button>\n\n                        {loading && <CircularProgress sx={{ mt: 2 }} />}\n                        {uploadedFileUrl && <Typography sx={{ mt: 2 }}>File uploaded successfully! Emails will be sent by backend.</Typography>}\n                        {error && <Typography color=\"error\" sx={{ mt: 2 }}>{error.message}</Typography>}\n                    </form>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default EmailAttachmentForm;\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { Grid, Paper, Typography, Button, CircularProgress, TextField } from '@mui/material';\n\n// function EmailAttachmentForm() {\n//     const [file, setFile] = useState();\n//     const [email, setEmail] = useState('');\n//     const [emails, setEmails] = useState([]);\n//     const [uploadedFile, setUploadedFile] = useState();\n//     const [error, setError] = useState();\n//     const [loading, setLoading] = useState(false);\n\n//     // Handle file selection and validation\n//     function handleFileChange(event) {\n//         const selectedFile = event.target.files[0];\n//         if (!selectedFile) return;\n\n//         // Validate file size and type\n//         if (selectedFile.size > 5000000) {\n//             setError(new Error('File size should be less than 5MB.'));\n//             return;\n//         }\n\n//         if (!['image/jpeg', 'image/png'].includes(selectedFile.type)) {\n//             setError(new Error('Only JPEG or PNG files are allowed.'));\n//             return;\n//         }\n\n//         setError(null);\n//         setFile(selectedFile);\n//     }\n\n//     // Handle email input and add it to the email list\n//     function handleEmailChange(event) {\n//         setEmail(event.target.value);\n//     }\n\n//     function handleAddEmail() {\n//         if (email && !emails.includes(email)) {\n//             setEmails([...emails, email]);\n//             setEmail('');\n//         }\n//     }\n\n//     // Handle file upload and email sending\n//     function handleSubmit(event) {\n//         event.preventDefault();\n\n//         if (!file || emails.length === 0) {\n//             setError(new Error('Please select a file and enter at least one email.'));\n//             return;\n//         }\n\n//         setLoading(true);\n\n//         const formData = new FormData();\n//         formData.append('file', file);\n//         formData.append('fileName', file.name);\n\n//         axios.post('http://localhost:5001/uploadFile', formData, {\n//             headers: { 'content-type': 'multipart/form-data' },\n//         })\n//             .then((response) => {\n//                 setUploadedFile(response.data.file);\n//                 setLoading(false);\n//                 // Here you would call EmailJS to send the email with the uploaded file\n//             })\n//             .catch((error) => {\n//                 setError(new Error('Error uploading file: ' + error.message));\n//                 setLoading(false);\n//             });\n//     }\n\n//     return (\n//         <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//             <Grid item xs={12} sm={8} md={6} lg={4}>\n//                 <Paper elevation={3} sx={{ p: 3, borderRadius: 2, backgroundColor: '#f9f9f9' }}>\n//                     <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 'bold', textAlign: 'center' }}>\n//                         Send Attachment via Email\n//                     </Typography>\n\n//                     <form onSubmit={handleSubmit}>\n//                         <TextField\n//                             fullWidth\n//                             label=\"Email\"\n//                             value={email}\n//                             onChange={handleEmailChange}\n//                             variant=\"outlined\"\n//                             margin=\"normal\"\n//                         />\n//                         <Button variant=\"contained\" color=\"primary\" onClick={handleAddEmail} fullWidth sx={{ mb: 2 }}>\n//                             Add Email\n//                         </Button>\n\n//                         <Typography variant=\"body2\" gutterBottom sx={{ mb: 2 }}>\n//                             Emails: {emails.join(', ')}\n//                         </Typography>\n\n//                         <Button variant=\"outlined\" component=\"label\" fullWidth sx={{ mb: 3 }}>\n//                             Select File\n//                             <input type=\"file\" hidden onChange={handleFileChange} />\n//                         </Button>\n\n//                         <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n//                             Upload & Send Email\n//                         </Button>\n\n//                         {loading && <CircularProgress sx={{ mt: 2 }} />}\n//                         {uploadedFile && <Typography sx={{ mt: 2 }}>File uploaded successfully!</Typography>}\n//                         {error && <Typography color=\"error\" sx={{ mt: 2 }}>{error.message}</Typography>}\n//                     </form>\n//                 </Paper>\n//             </Grid>\n//         </Grid>\n//     );\n// }\n\n// export default EmailAttachmentForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}