{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// import emailjs from 'emailjs-com';\n// import { TextField, Button, Typography, Snackbar, Alert, Grid, Paper, Box } from '@mui/material';\n\n// const EmailRestAPI = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     message: '',\n//   });\n\n//   const [uploadedFileUrl, setUploadedFileUrl] = useState('');\n//   const [openSnackbar, setOpenSnackbar] = useState(false);\n//   const [file, setFile] = useState(null);\n\n//   // Function to handle file selection\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   // Function to handle file upload\n//   const handleFileUpload = async () => {\n//     if (!file) {\n//       console.error('Please select a file to upload.');\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     try {\n//       const response = await axios.post('http://localhost:5001/uploadFile', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       setUploadedFileUrl(`http://localhost:5001${response.data.file}`);\n//       console.log('File uploaded successfully:', response.data.file);\n//     } catch (error) {\n//       console.error('Error uploading file:', error);\n//     }\n//   };\n\n//   // Function to handle form submission and send email using EmailJS\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const { name, email, message } = formData;\n\n//     if (!uploadedFileUrl) {\n//       console.error('Please upload a file first.');\n//       return;\n//     }\n\n//     // Prepare email template parameters for EmailJS\n//     const templateParams = {\n//       to_name: 'Web Wizard',\n//       from_name: name,\n//       from_email: email,\n//       message: message,\n//       attachment_url: uploadedFileUrl,\n//     };\n\n//     try {\n//       // Using emailjs to send email from the client side\n//       const response = await emailjs.send(\n//         'service_cxrroqf', // Your EmailJS service ID\n//         'template_dorbgjd', // Your EmailJS template ID\n//         templateParams,\n//         'o5MLS1yF53Sj3iw2X' // Your EmailJS user ID\n//       );\n\n//       console.log('Email sent successfully:', response.status, response.text);\n\n//       // Clear the form data\n//       setFormData({ name: '', email: '', message: '' });\n//       setUploadedFileUrl('');\n\n//       // Show success snackbar\n//       setOpenSnackbar(true);\n//     } catch (error) {\n//       console.error('Error sending email:', error);\n//     }\n//   };\n\n//   // Handle Snackbar close\n//   const handleCloseSnackbar = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setOpenSnackbar(false);\n//   };\n\n//   return (\n//     <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//       <Grid item xs={12} sm={8} md={6} lg={4}>\n//         <Paper elevation={3} sx={{ padding: 4 }}>\n//           <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//             Send an Email\n//           </Typography>\n//           <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n//             <input type=\"file\" onChange={handleFileChange} />\n//             <Button\n//               variant=\"contained\"\n//               color=\"secondary\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//               onClick={handleFileUpload}\n//             >\n//               Upload File\n//             </Button>\n//             <TextField\n//               label=\"Your Name\"\n//               name=\"name\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.name}\n//               onChange={(e) => setFormData((prev) => ({ ...prev, name: e.target.value }))}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Email\"\n//               name=\"email\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.email}\n//               onChange={(e) => setFormData((prev) => ({ ...prev, email: e.target.value }))}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Message\"\n//               name=\"message\"\n//               variant=\"outlined\"\n//               fullWidth\n//               multiline\n//               rows={6}\n//               margin=\"normal\"\n//               value={formData.message}\n//               onChange={(e) => setFormData((prev) => ({ ...prev, message: e.target.value }))}\n//               required\n//             />\n//             <Button\n//               type=\"submit\"\n//               variant=\"contained\"\n//               color=\"primary\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//             >\n//               Send Email\n//             </Button>\n//           </Box>\n//         </Paper>\n//       </Grid>\n\n//       {/* Snackbar for success message */}\n//       <Snackbar\n//         open={openSnackbar}\n//         autoHideDuration={6000}\n//         onClose={handleCloseSnackbar}\n//         anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n//       >\n//         <Alert onClose={handleCloseSnackbar} severity=\"success\">\n//           Email sent successfully!\n//         </Alert>\n//       </Snackbar>\n//     </Grid>\n//   );\n// };\n\n// export default EmailRestAPI;\n\n// import axios from 'axios';\n// import React, { useState } from 'react';\n// import { TextField, Button, Typography, Snackbar, Alert, Grid, Paper, Box } from '@mui/material';\n\n// const EmailRestAPI = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     message: '',\n//   });\n\n//   const [uploadedFileUrl, setUploadedFileUrl] = useState(''); // State to store the uploaded file URL\n//   const [openSnackbar, setOpenSnackbar] = useState(false); // State for Snackbar\n//   const [file, setFile] = useState(null); // State to store selected file\n\n//   // Function to handle file selection\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   // Function to handle file upload\n//   const handleFileUpload = async () => {\n//     if (!file) {\n//       console.error('Please select a file to upload.');\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     try {\n//       const response = await axios.post('http://localhost:5001/uploadFile', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       setUploadedFileUrl(`http://localhost:5001${response.data.file}`);\n//     } catch (error) {\n//       console.error('Error uploading file:', error);\n//     }\n//   };\n\n//   // Function to handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const { name, email, message } = formData;\n\n//     if (!uploadedFileUrl) {\n//       console.error('Please upload a file first.');\n//       return;\n//     }\n\n//     // Data information for EmailJS\n//     const data = {\n//       service_id: 'service_cxrroqf',\n//       template_id: 'template_dorbgjd',\n//       user_id: 'o5MLS1yF53Sj3iw2X',\n//       template_params: {\n//         from_name: name,\n//         from_email: email,\n//         to_name: 'Web Wizard',\n//         message: message,\n//         attachment_url: uploadedFileUrl,\n//       },\n//     };\n\n//     try {\n//       const response = await axios.post('https://api.emailjs.com/api/v1.0/email/send', data);\n//       console.log('Email sent:', response.data);\n\n//       // Clear the form data\n//       setFormData({ name: '', email: '', message: '' });\n\n//       // Show success snackbar\n//       setOpenSnackbar(true);\n//     } catch (error) {\n//       console.error('Error sending email:', error);\n//     }\n//   };\n\n//   // Handle Snackbar close\n//   const handleCloseSnackbar = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setOpenSnackbar(false);\n//   };\n\n//   return (\n//     <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//       <Grid item xs={12} sm={8} md={6} lg={4}>\n//         <Paper elevation={3} sx={{ padding: 4 }}>\n//           <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//             Send an Email\n//           </Typography>\n//           <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n//             <input type=\"file\" onChange={handleFileChange} />\n//             <Button\n//               variant=\"contained\"\n//               color=\"secondary\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//               onClick={handleFileUpload}\n//             >\n//               Upload File\n//             </Button>\n//             <TextField\n//               label=\"Your Name\"\n//               name=\"name\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.name}\n//               onChange={(e) => setFormData((prev) => ({ ...prev, name: e.target.value }))}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Email\"\n//               name=\"email\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.email}\n//               onChange={(e) => setFormData((prev) => ({ ...prev, email: e.target.value }))}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Message\"\n//               name=\"message\"\n//               variant=\"outlined\"\n//               fullWidth\n//               multiline\n//               rows={6}\n//               margin=\"normal\"\n//               value={formData.message}\n//               onChange={(e) => setFormData((prev) => ({ ...prev, message: e.target.value }))}\n//               required\n//             />\n//             <Button\n//               type=\"submit\"\n//               variant=\"contained\"\n//               color=\"primary\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//             >\n//               Send Email\n//             </Button>\n//           </Box>\n//         </Paper>\n//       </Grid>\n\n//       {/* Snackbar for success message */}\n//       <Snackbar\n//         open={openSnackbar}\n//         autoHideDuration={6000}\n//         onClose={handleCloseSnackbar}\n//         anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n//       >\n//         <Alert onClose={handleCloseSnackbar} severity=\"success\">\n//           Email sent successfully!\n//         </Alert>\n//       </Snackbar>\n//     </Grid>\n//   );\n// };\n\n// export default EmailRestAPI;\n\n// import axios from 'axios';\n// import React, { useState } from 'react';\n// import { TextField, Button, Typography, Snackbar, Alert, Grid, Paper, Box } from '@mui/material';\n\n// const EmailRestAPI = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     message: ''\n//   });\n\n//   const [uploadedFileUrl, setUploadedFileUrl] = useState(''); // State to store the file URL\n//   const [openSnackbar, setOpenSnackbar] = useState(false); // State for Snackbar\n\n//   // Function to handle file upload\n//   const handleFileUpload = async (event) => {\n//     const selectedFile = event.target.files[0];\n//     if (!selectedFile) return;\n\n//     const formData = new FormData();\n//     formData.append('file', selectedFile);\n\n//     try {\n//       const response = await axios.post('http://localhost:5001/uploadFile', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       setUploadedFileUrl(`http://localhost:5001${response.data.file}`);\n//     } catch (error) {\n//       console.error('Error uploading file:', error);\n//     }\n//   };\n\n//   // Function to handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const { name, email, message } = formData;\n\n//     if (!uploadedFileUrl) {\n//       console.error('Please upload a file first.');\n//       return;\n//     }\n\n//     // Data information for EmailJS\n//     const data = {\n//       service_id: 'service_cxrroqf',\n//       template_id: 'template_dorbgjd',\n//       user_id: 'o5MLS1yF53Sj3iw2X',\n//       template_params: {\n//         from_name: name,\n//         from_email: email,\n//         to_name: 'Web Wizard',\n//         message: message,\n//         attachment_url: uploadedFileUrl, // Use the uploaded file URL as an attachment link\n//       }\n//     };\n\n//     try {\n//       const response = await axios.post('https://api.emailjs.com/api/v1.0/email/send', data);\n//       console.log('Email sent:', response.data);\n\n//       // Clear the form data\n//       setFormData({ name: '', email: '', message: '' });\n\n//       // Show success snackbar\n//       setOpenSnackbar(true);\n//     } catch (error) {\n//       console.error('Error sending email:', error);\n//     }\n//   };\n\n//   // Handle Snackbar close\n//   const handleCloseSnackbar = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setOpenSnackbar(false);\n//   };\n\n//   return (\n//     <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//       <Grid item xs={12} sm={8} md={6} lg={4}>\n//         <Paper elevation={3} sx={{ padding: 4 }}>\n//           <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//             Send an Email\n//           </Typography>\n//           <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n//             <input\n//               type=\"file\"\n//               accept=\"image/jpeg, image/png\"\n//               onChange={handleFileUpload}\n//               style={{ display: 'block', marginBottom: '1rem' }}\n//             />\n//             <TextField\n//               label=\"Your Name\"\n//               name=\"name\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.name}\n//               onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Email\"\n//               name=\"email\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.email}\n//               onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Message\"\n//               name=\"message\"\n//               variant=\"outlined\"\n//               fullWidth\n//               multiline\n//               rows={6}\n//               margin=\"normal\"\n//               value={formData.message}\n//               onChange={(e) => setFormData(prev => ({ ...prev, message: e.target.value }))}\n//               required\n//             />\n//             <Button\n//               type=\"submit\"\n//               variant=\"contained\"\n//               color=\"primary\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//             >\n//               Send Email\n//             </Button>\n//           </Box>\n//         </Paper>\n//       </Grid>\n\n//       {/* Snackbar for success message */}\n//       <Snackbar\n//         open={openSnackbar}\n//         autoHideDuration={6000}\n//         onClose={handleCloseSnackbar}\n//         anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n//       >\n//         <Alert onClose={handleCloseSnackbar} severity=\"success\">\n//           Email sent successfully!\n//         </Alert>\n//       </Snackbar>\n//     </Grid>\n//   );\n// };\n\n// export default EmailRestAPI;\n\n// import axios from 'axios';\n// import React, { useState } from 'react';\n// import { TextField, Button, Typography, Snackbar, Alert, Grid, Paper, Box, Card, CardMedia, CircularProgress } from '@mui/material';\n\n// const EmailRestAPI = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     message: ''\n//   });\n//   const [file, setFile] = useState(null);\n//   const [uploadedFileUrl, setUploadedFileUrl] = useState('');\n//   const [openSnackbar, setOpenSnackbar] = useState(false); // State for Snackbar\n//   const [loading, setLoading] = useState(false); // State for Loading\n\n//   // Handle input changes\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prevData => ({ ...prevData, [name]: value }));\n//   };\n\n//   // Handle file selection\n//   const handleFileChange = (event) => {\n//     const selectedFile = event.target.files[0];\n//     setFile(selectedFile);\n//   };\n\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!file) {\n//       console.error(\"Please select a file before sending an email.\");\n//       return;\n//     }\n\n//     setLoading(true); // Start loading when file upload starts\n\n//     // Upload the file first\n//     try {\n//       const formData = new FormData();\n//       formData.append('file', file);\n\n//       const uploadResponse = await axios.post('http://localhost:5001/uploadFile', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data'\n//         }\n//       });\n\n//       const uploadedFilePath = `http://localhost:5001${uploadResponse.data.file}`;\n//       setUploadedFileUrl(uploadedFilePath);\n\n//       // Proceed to send the email with the uploaded file's URL\n//       const { name, email, message } = formData;\n\n//       // Data information for email\n//       const emailData = {\n//         service_id: 'service_cxrroqf',\n//         template_id: 'template_dorbgd',\n//         user_id: 'o5MLS1yF53Sj3iw2X',\n//         template_params: {\n//           to_name: 'Web Wizard',\n//           from_name: name,\n//           from_email: email,\n//           message: message,\n//           attachment_url: uploadedFilePath // Attach the uploaded file\n//         }\n//       };\n\n//       const response = await axios.post('https://api.emailjs.com/api/v1.0/email/send', emailData);\n//       console.log('Email sent:', response.data);\n\n//       // Clear the form data and file input\n//       setFormData({ name: '', email: '', message: '' });\n//       setFile(null);\n//       setOpenSnackbar(true); // Show success snackbar\n//     } catch (error) {\n//       console.error('Error sending email:', error);\n//     } finally {\n//       setLoading(false); // Stop loading once upload and email sending is complete\n//     }\n//   };\n\n//   // Handle Snackbar close\n//   const handleCloseSnackbar = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setOpenSnackbar(false);\n//   };\n\n//   return (\n//     <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//       <Grid item xs={12} sm={8} md={6} lg={4}>\n//         <Paper elevation={3} sx={{ padding: 4 }}>\n//           <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//             Send an Email with Attachment\n//           </Typography>\n//           <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n//             <TextField\n//               label=\"Your Name\"\n//               name=\"name\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.name}\n//               onChange={handleChange}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Email\"\n//               name=\"email\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.email}\n//               onChange={handleChange}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Message\"\n//               name=\"message\"\n//               variant=\"outlined\"\n//               fullWidth\n//               multiline\n//               rows={6}\n//               margin=\"normal\"\n//               value={formData.message}\n//               onChange={handleChange}\n//               required\n//             />\n//             <Button\n//               variant=\"contained\"\n//               component=\"label\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//             >\n//               Choose File\n//               <input type=\"file\" hidden onChange={handleFileChange} />\n//             </Button>\n//             {file && (\n//               <Card sx={{ mt: 2 }}>\n//                 <CardMedia\n//                   component=\"img\"\n//                   height=\"140\"\n//                   image={URL.createObjectURL(file)}\n//                   alt=\"Selected file preview\"\n//                 />\n//                 <Typography variant=\"body2\" align=\"center\" sx={{ mt: 1 }}>\n//                   {file.name}\n//                 </Typography>\n//               </Card>\n//             )}\n//             <Button\n//               type=\"submit\"\n//               variant=\"contained\"\n//               color=\"primary\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//               disabled={loading}\n//             >\n//               {loading ? <CircularProgress size={24} /> : 'Send Email'}\n//             </Button>\n//           </Box>\n//         </Paper>\n//       </Grid>\n\n//       {/* Snackbar for success message */}\n//       <Snackbar\n//         open={openSnackbar}\n//         autoHideDuration={6000}\n//         onClose={handleCloseSnackbar}\n//         anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n//       >\n//         <Alert onClose={handleCloseSnackbar} severity=\"success\">\n//           Email sent successfully!\n//         </Alert>\n//       </Snackbar>\n//     </Grid>\n//   );\n// };\n\n// export default EmailRestAPI;","map":{"version":3,"names":[],"sources":["/Users/marioacosta/Documents/GitHub/SteelsOnline2/frontend/src/components/email/EmailRestAPI.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n// import emailjs from 'emailjs-com';\n// import { TextField, Button, Typography, Snackbar, Alert, Grid, Paper, Box } from '@mui/material';\n\n// const EmailRestAPI = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     message: '',\n//   });\n\n//   const [uploadedFileUrl, setUploadedFileUrl] = useState('');\n//   const [openSnackbar, setOpenSnackbar] = useState(false);\n//   const [file, setFile] = useState(null);\n\n//   // Function to handle file selection\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   // Function to handle file upload\n//   const handleFileUpload = async () => {\n//     if (!file) {\n//       console.error('Please select a file to upload.');\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     try {\n//       const response = await axios.post('http://localhost:5001/uploadFile', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       setUploadedFileUrl(`http://localhost:5001${response.data.file}`);\n//       console.log('File uploaded successfully:', response.data.file);\n//     } catch (error) {\n//       console.error('Error uploading file:', error);\n//     }\n//   };\n\n//   // Function to handle form submission and send email using EmailJS\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const { name, email, message } = formData;\n\n//     if (!uploadedFileUrl) {\n//       console.error('Please upload a file first.');\n//       return;\n//     }\n\n//     // Prepare email template parameters for EmailJS\n//     const templateParams = {\n//       to_name: 'Web Wizard',\n//       from_name: name,\n//       from_email: email,\n//       message: message,\n//       attachment_url: uploadedFileUrl,\n//     };\n\n//     try {\n//       // Using emailjs to send email from the client side\n//       const response = await emailjs.send(\n//         'service_cxrroqf', // Your EmailJS service ID\n//         'template_dorbgjd', // Your EmailJS template ID\n//         templateParams,\n//         'o5MLS1yF53Sj3iw2X' // Your EmailJS user ID\n//       );\n\n//       console.log('Email sent successfully:', response.status, response.text);\n\n//       // Clear the form data\n//       setFormData({ name: '', email: '', message: '' });\n//       setUploadedFileUrl('');\n\n//       // Show success snackbar\n//       setOpenSnackbar(true);\n//     } catch (error) {\n//       console.error('Error sending email:', error);\n//     }\n//   };\n\n//   // Handle Snackbar close\n//   const handleCloseSnackbar = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setOpenSnackbar(false);\n//   };\n\n//   return (\n//     <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//       <Grid item xs={12} sm={8} md={6} lg={4}>\n//         <Paper elevation={3} sx={{ padding: 4 }}>\n//           <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//             Send an Email\n//           </Typography>\n//           <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n//             <input type=\"file\" onChange={handleFileChange} />\n//             <Button\n//               variant=\"contained\"\n//               color=\"secondary\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//               onClick={handleFileUpload}\n//             >\n//               Upload File\n//             </Button>\n//             <TextField\n//               label=\"Your Name\"\n//               name=\"name\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.name}\n//               onChange={(e) => setFormData((prev) => ({ ...prev, name: e.target.value }))}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Email\"\n//               name=\"email\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.email}\n//               onChange={(e) => setFormData((prev) => ({ ...prev, email: e.target.value }))}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Message\"\n//               name=\"message\"\n//               variant=\"outlined\"\n//               fullWidth\n//               multiline\n//               rows={6}\n//               margin=\"normal\"\n//               value={formData.message}\n//               onChange={(e) => setFormData((prev) => ({ ...prev, message: e.target.value }))}\n//               required\n//             />\n//             <Button\n//               type=\"submit\"\n//               variant=\"contained\"\n//               color=\"primary\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//             >\n//               Send Email\n//             </Button>\n//           </Box>\n//         </Paper>\n//       </Grid>\n\n//       {/* Snackbar for success message */}\n//       <Snackbar\n//         open={openSnackbar}\n//         autoHideDuration={6000}\n//         onClose={handleCloseSnackbar}\n//         anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n//       >\n//         <Alert onClose={handleCloseSnackbar} severity=\"success\">\n//           Email sent successfully!\n//         </Alert>\n//       </Snackbar>\n//     </Grid>\n//   );\n// };\n\n// export default EmailRestAPI;\n\n\n// import axios from 'axios';\n// import React, { useState } from 'react';\n// import { TextField, Button, Typography, Snackbar, Alert, Grid, Paper, Box } from '@mui/material';\n\n// const EmailRestAPI = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     message: '',\n//   });\n\n//   const [uploadedFileUrl, setUploadedFileUrl] = useState(''); // State to store the uploaded file URL\n//   const [openSnackbar, setOpenSnackbar] = useState(false); // State for Snackbar\n//   const [file, setFile] = useState(null); // State to store selected file\n\n//   // Function to handle file selection\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   // Function to handle file upload\n//   const handleFileUpload = async () => {\n//     if (!file) {\n//       console.error('Please select a file to upload.');\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     try {\n//       const response = await axios.post('http://localhost:5001/uploadFile', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       setUploadedFileUrl(`http://localhost:5001${response.data.file}`);\n//     } catch (error) {\n//       console.error('Error uploading file:', error);\n//     }\n//   };\n\n//   // Function to handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const { name, email, message } = formData;\n\n//     if (!uploadedFileUrl) {\n//       console.error('Please upload a file first.');\n//       return;\n//     }\n\n//     // Data information for EmailJS\n//     const data = {\n//       service_id: 'service_cxrroqf',\n//       template_id: 'template_dorbgjd',\n//       user_id: 'o5MLS1yF53Sj3iw2X',\n//       template_params: {\n//         from_name: name,\n//         from_email: email,\n//         to_name: 'Web Wizard',\n//         message: message,\n//         attachment_url: uploadedFileUrl,\n//       },\n//     };\n\n//     try {\n//       const response = await axios.post('https://api.emailjs.com/api/v1.0/email/send', data);\n//       console.log('Email sent:', response.data);\n\n//       // Clear the form data\n//       setFormData({ name: '', email: '', message: '' });\n\n//       // Show success snackbar\n//       setOpenSnackbar(true);\n//     } catch (error) {\n//       console.error('Error sending email:', error);\n//     }\n//   };\n\n//   // Handle Snackbar close\n//   const handleCloseSnackbar = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setOpenSnackbar(false);\n//   };\n\n//   return (\n//     <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//       <Grid item xs={12} sm={8} md={6} lg={4}>\n//         <Paper elevation={3} sx={{ padding: 4 }}>\n//           <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//             Send an Email\n//           </Typography>\n//           <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n//             <input type=\"file\" onChange={handleFileChange} />\n//             <Button\n//               variant=\"contained\"\n//               color=\"secondary\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//               onClick={handleFileUpload}\n//             >\n//               Upload File\n//             </Button>\n//             <TextField\n//               label=\"Your Name\"\n//               name=\"name\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.name}\n//               onChange={(e) => setFormData((prev) => ({ ...prev, name: e.target.value }))}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Email\"\n//               name=\"email\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.email}\n//               onChange={(e) => setFormData((prev) => ({ ...prev, email: e.target.value }))}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Message\"\n//               name=\"message\"\n//               variant=\"outlined\"\n//               fullWidth\n//               multiline\n//               rows={6}\n//               margin=\"normal\"\n//               value={formData.message}\n//               onChange={(e) => setFormData((prev) => ({ ...prev, message: e.target.value }))}\n//               required\n//             />\n//             <Button\n//               type=\"submit\"\n//               variant=\"contained\"\n//               color=\"primary\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//             >\n//               Send Email\n//             </Button>\n//           </Box>\n//         </Paper>\n//       </Grid>\n\n//       {/* Snackbar for success message */}\n//       <Snackbar\n//         open={openSnackbar}\n//         autoHideDuration={6000}\n//         onClose={handleCloseSnackbar}\n//         anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n//       >\n//         <Alert onClose={handleCloseSnackbar} severity=\"success\">\n//           Email sent successfully!\n//         </Alert>\n//       </Snackbar>\n//     </Grid>\n//   );\n// };\n\n// export default EmailRestAPI;\n\n\n// import axios from 'axios';\n// import React, { useState } from 'react';\n// import { TextField, Button, Typography, Snackbar, Alert, Grid, Paper, Box } from '@mui/material';\n\n// const EmailRestAPI = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     message: ''\n//   });\n\n//   const [uploadedFileUrl, setUploadedFileUrl] = useState(''); // State to store the file URL\n//   const [openSnackbar, setOpenSnackbar] = useState(false); // State for Snackbar\n\n//   // Function to handle file upload\n//   const handleFileUpload = async (event) => {\n//     const selectedFile = event.target.files[0];\n//     if (!selectedFile) return;\n\n//     const formData = new FormData();\n//     formData.append('file', selectedFile);\n\n//     try {\n//       const response = await axios.post('http://localhost:5001/uploadFile', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n//       setUploadedFileUrl(`http://localhost:5001${response.data.file}`);\n//     } catch (error) {\n//       console.error('Error uploading file:', error);\n//     }\n//   };\n\n//   // Function to handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const { name, email, message } = formData;\n\n//     if (!uploadedFileUrl) {\n//       console.error('Please upload a file first.');\n//       return;\n//     }\n\n//     // Data information for EmailJS\n//     const data = {\n//       service_id: 'service_cxrroqf',\n//       template_id: 'template_dorbgjd',\n//       user_id: 'o5MLS1yF53Sj3iw2X',\n//       template_params: {\n//         from_name: name,\n//         from_email: email,\n//         to_name: 'Web Wizard',\n//         message: message,\n//         attachment_url: uploadedFileUrl, // Use the uploaded file URL as an attachment link\n//       }\n//     };\n\n//     try {\n//       const response = await axios.post('https://api.emailjs.com/api/v1.0/email/send', data);\n//       console.log('Email sent:', response.data);\n\n//       // Clear the form data\n//       setFormData({ name: '', email: '', message: '' });\n\n//       // Show success snackbar\n//       setOpenSnackbar(true);\n//     } catch (error) {\n//       console.error('Error sending email:', error);\n//     }\n//   };\n\n//   // Handle Snackbar close\n//   const handleCloseSnackbar = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setOpenSnackbar(false);\n//   };\n\n//   return (\n//     <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//       <Grid item xs={12} sm={8} md={6} lg={4}>\n//         <Paper elevation={3} sx={{ padding: 4 }}>\n//           <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//             Send an Email\n//           </Typography>\n//           <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n//             <input\n//               type=\"file\"\n//               accept=\"image/jpeg, image/png\"\n//               onChange={handleFileUpload}\n//               style={{ display: 'block', marginBottom: '1rem' }}\n//             />\n//             <TextField\n//               label=\"Your Name\"\n//               name=\"name\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.name}\n//               onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Email\"\n//               name=\"email\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.email}\n//               onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Message\"\n//               name=\"message\"\n//               variant=\"outlined\"\n//               fullWidth\n//               multiline\n//               rows={6}\n//               margin=\"normal\"\n//               value={formData.message}\n//               onChange={(e) => setFormData(prev => ({ ...prev, message: e.target.value }))}\n//               required\n//             />\n//             <Button\n//               type=\"submit\"\n//               variant=\"contained\"\n//               color=\"primary\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//             >\n//               Send Email\n//             </Button>\n//           </Box>\n//         </Paper>\n//       </Grid>\n\n//       {/* Snackbar for success message */}\n//       <Snackbar\n//         open={openSnackbar}\n//         autoHideDuration={6000}\n//         onClose={handleCloseSnackbar}\n//         anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n//       >\n//         <Alert onClose={handleCloseSnackbar} severity=\"success\">\n//           Email sent successfully!\n//         </Alert>\n//       </Snackbar>\n//     </Grid>\n//   );\n// };\n\n// export default EmailRestAPI;\n\n\n// import axios from 'axios';\n// import React, { useState } from 'react';\n// import { TextField, Button, Typography, Snackbar, Alert, Grid, Paper, Box, Card, CardMedia, CircularProgress } from '@mui/material';\n\n// const EmailRestAPI = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     message: ''\n//   });\n//   const [file, setFile] = useState(null);\n//   const [uploadedFileUrl, setUploadedFileUrl] = useState('');\n//   const [openSnackbar, setOpenSnackbar] = useState(false); // State for Snackbar\n//   const [loading, setLoading] = useState(false); // State for Loading\n\n//   // Handle input changes\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prevData => ({ ...prevData, [name]: value }));\n//   };\n\n//   // Handle file selection\n//   const handleFileChange = (event) => {\n//     const selectedFile = event.target.files[0];\n//     setFile(selectedFile);\n//   };\n\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!file) {\n//       console.error(\"Please select a file before sending an email.\");\n//       return;\n//     }\n\n//     setLoading(true); // Start loading when file upload starts\n\n//     // Upload the file first\n//     try {\n//       const formData = new FormData();\n//       formData.append('file', file);\n\n//       const uploadResponse = await axios.post('http://localhost:5001/uploadFile', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data'\n//         }\n//       });\n\n//       const uploadedFilePath = `http://localhost:5001${uploadResponse.data.file}`;\n//       setUploadedFileUrl(uploadedFilePath);\n\n//       // Proceed to send the email with the uploaded file's URL\n//       const { name, email, message } = formData;\n\n//       // Data information for email\n//       const emailData = {\n//         service_id: 'service_cxrroqf',\n//         template_id: 'template_dorbgd',\n//         user_id: 'o5MLS1yF53Sj3iw2X',\n//         template_params: {\n//           to_name: 'Web Wizard',\n//           from_name: name,\n//           from_email: email,\n//           message: message,\n//           attachment_url: uploadedFilePath // Attach the uploaded file\n//         }\n//       };\n\n//       const response = await axios.post('https://api.emailjs.com/api/v1.0/email/send', emailData);\n//       console.log('Email sent:', response.data);\n\n//       // Clear the form data and file input\n//       setFormData({ name: '', email: '', message: '' });\n//       setFile(null);\n//       setOpenSnackbar(true); // Show success snackbar\n//     } catch (error) {\n//       console.error('Error sending email:', error);\n//     } finally {\n//       setLoading(false); // Stop loading once upload and email sending is complete\n//     }\n//   };\n\n//   // Handle Snackbar close\n//   const handleCloseSnackbar = (event, reason) => {\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     setOpenSnackbar(false);\n//   };\n\n//   return (\n//     <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n//       <Grid item xs={12} sm={8} md={6} lg={4}>\n//         <Paper elevation={3} sx={{ padding: 4 }}>\n//           <Typography variant=\"h4\" align=\"center\" gutterBottom>\n//             Send an Email with Attachment\n//           </Typography>\n//           <Box component=\"form\" onSubmit={handleSubmit} noValidate>\n//             <TextField\n//               label=\"Your Name\"\n//               name=\"name\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.name}\n//               onChange={handleChange}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Email\"\n//               name=\"email\"\n//               variant=\"outlined\"\n//               fullWidth\n//               margin=\"normal\"\n//               value={formData.email}\n//               onChange={handleChange}\n//               required\n//             />\n//             <TextField\n//               label=\"Your Message\"\n//               name=\"message\"\n//               variant=\"outlined\"\n//               fullWidth\n//               multiline\n//               rows={6}\n//               margin=\"normal\"\n//               value={formData.message}\n//               onChange={handleChange}\n//               required\n//             />\n//             <Button\n//               variant=\"contained\"\n//               component=\"label\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//             >\n//               Choose File\n//               <input type=\"file\" hidden onChange={handleFileChange} />\n//             </Button>\n//             {file && (\n//               <Card sx={{ mt: 2 }}>\n//                 <CardMedia\n//                   component=\"img\"\n//                   height=\"140\"\n//                   image={URL.createObjectURL(file)}\n//                   alt=\"Selected file preview\"\n//                 />\n//                 <Typography variant=\"body2\" align=\"center\" sx={{ mt: 1 }}>\n//                   {file.name}\n//                 </Typography>\n//               </Card>\n//             )}\n//             <Button\n//               type=\"submit\"\n//               variant=\"contained\"\n//               color=\"primary\"\n//               fullWidth\n//               sx={{ mt: 2 }}\n//               disabled={loading}\n//             >\n//               {loading ? <CircularProgress size={24} /> : 'Send Email'}\n//             </Button>\n//           </Box>\n//         </Paper>\n//       </Grid>\n\n//       {/* Snackbar for success message */}\n//       <Snackbar\n//         open={openSnackbar}\n//         autoHideDuration={6000}\n//         onClose={handleCloseSnackbar}\n//         anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n//       >\n//         <Alert onClose={handleCloseSnackbar} severity=\"success\">\n//           Email sent successfully!\n//         </Alert>\n//       </Snackbar>\n//     </Grid>\n//   );\n// };\n\n// export default EmailRestAPI;\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}