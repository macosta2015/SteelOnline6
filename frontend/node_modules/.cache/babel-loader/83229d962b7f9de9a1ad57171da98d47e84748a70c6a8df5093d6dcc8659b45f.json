{"ast":null,"code":"var _jsxFileName = \"/Users/marioacosta/Documents/GitHub/SteelOnline3/frontend/src/components/email/email.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, Button, Snackbar, Typography, Grid, Container, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailList({\n  onEmailAdded\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(null);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const validateEmail = email => {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(String(email).toLowerCase());\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateEmail(email)) {\n      setError('Please enter a valid email address.');\n      return;\n    }\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5001/saveEmail', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (response.ok) {\n        setOpenSnackbar(true);\n        setEmail(''); // Clear the input\n        onEmailAdded(); // Notify parent to refresh the email list\n      } else {\n        throw new Error('Error saving email');\n      }\n    } catch (error) {\n      console.error(error);\n      setError('Error saving email');\n    }\n  };\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            padding: 3,\n            borderRadius: 2,\n            boxShadow: 3,\n            backgroundColor: '#f9f9f9'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            align: \"center\",\n            gutterBottom: true,\n            children: \"Add Email to List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Enter Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              error: !!error,\n              helperText: error,\n              variant: \"outlined\",\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              children: \"Add Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n            open: openSnackbar,\n            autoHideDuration: 6000,\n            onClose: handleCloseSnackbar,\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              onClose: handleCloseSnackbar,\n              severity: \"success\",\n              children: \"Email added successfully!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailList, \"1n8mvzsPrBfLRlDlVsy+s2EVimQ=\");\n_c = EmailList;\nexport default EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","Snackbar","Typography","Grid","Container","Alert","jsxDEV","_jsxDEV","EmailList","onEmailAdded","_s","email","setEmail","error","setError","openSnackbar","setOpenSnackbar","validateEmail","re","test","String","toLowerCase","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","console","handleCloseSnackbar","event","reason","maxWidth","sx","mt","children","container","justifyContent","alignItems","item","xs","padding","borderRadius","boxShadow","backgroundColor","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","fullWidth","label","value","onChange","target","helperText","mb","type","color","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","_c","$RefreshReg$"],"sources":["/Users/marioacosta/Documents/GitHub/SteelOnline3/frontend/src/components/email/email.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, TextField, Button, Snackbar, Typography, Grid, Container, Alert } from '@mui/material';\n\nfunction EmailList({ onEmailAdded }) {\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState(null);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const validateEmail = (email) => {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!validateEmail(email)) {\n      setError('Please enter a valid email address.');\n      return;\n    }\n\n    setError(null);\n\n    try {\n      const response = await fetch('http://localhost:5001/saveEmail', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email }),\n      });\n\n      if (response.ok) {\n        setOpenSnackbar(true);\n        setEmail(''); // Clear the input\n        onEmailAdded(); // Notify parent to refresh the email list\n      } else {\n        throw new Error('Error saving email');\n      }\n    } catch (error) {\n      console.error(error);\n      setError('Error saving email');\n    }\n  };\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ mt: 4 }}>\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <Box sx={{ padding: 3, borderRadius: 2, boxShadow: 3, backgroundColor: '#f9f9f9' }}>\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>\n              Add Email to List\n            </Typography>\n\n            <form onSubmit={handleSubmit}>\n              <TextField\n                fullWidth\n                label=\"Enter Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                error={!!error}\n                helperText={error}\n                variant=\"outlined\"\n                sx={{ mb: 2 }}\n              />\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n                Add Email\n              </Button>\n            </form>\n\n            {/* Snackbar for success */}\n            <Snackbar\n              open={openSnackbar}\n              autoHideDuration={6000}\n              onClose={handleCloseSnackbar}\n              anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n            >\n              <Alert onClose={handleCloseSnackbar} severity=\"success\">\n                Email added successfully!\n              </Alert>\n            </Snackbar>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default EmailList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}