{"ast":null,"code":"var _jsxFileName = \"/Users/marioacosta/Documents/GitHub/SteelsOnline2/frontend/src/components/email/displayemail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, List, ListItem, ListItemText, CircularProgress, Grid, Paper, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayEmails({\n  emailRefreshTrigger\n}) {\n  _s();\n  const [emails, setEmails] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchEmails = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/emails.txt');\n        if (!response.ok) {\n          throw new Error('Failed to fetch emails');\n        }\n        const data = await response.text();\n        const emailList = data.split('\\n').filter(email => email); // Split by new line and filter out empty strings\n        setEmails(emailList);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEmails();\n  }, [emailRefreshTrigger]); // Re-fetch emails when emailRefreshTrigger changes\n\n  const handleDelete = async emailToDelete => {\n    try {\n      const response = await fetch('http://localhost:5001/deleteEmail', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: emailToDelete\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete email');\n      }\n      setEmails(emails.filter(email => email !== emailToDelete));\n    } catch (error) {\n      console.error('Error deleting email:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      sx: {\n        mt: 2,\n        textAlign: 'center'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    sx: {\n      height: '100vh',\n      padding: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 6,\n      lg: 4,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 3,\n          borderRadius: 2,\n          backgroundColor: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mb: 2,\n            fontWeight: 'bold',\n            textAlign: 'center'\n          },\n          children: \"Emails from File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: emails.map((email, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              backgroundColor: '#fff',\n              mb: 1,\n              borderRadius: 1,\n              boxShadow: 1,\n              '&:hover': {\n                backgroundColor: '#f0f0f0'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: email,\n              sx: {\n                wordBreak: 'break-all'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => handleDelete(email),\n              color: \"primary\" // Change this to match your desired blue\n              ,\n              sx: {\n                ml: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayEmails, \"Euylchhn8zQbWsS8EhOkKL+D2kk=\");\n_c = DisplayEmails;\nexport default DisplayEmails;\nvar _c;\n$RefreshReg$(_c, \"DisplayEmails\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","List","ListItem","ListItemText","CircularProgress","Grid","Paper","IconButton","DeleteIcon","jsxDEV","_jsxDEV","DisplayEmails","emailRefreshTrigger","_s","emails","setEmails","loading","setLoading","error","setError","fetchEmails","response","fetch","ok","Error","data","text","emailList","split","filter","email","err","message","handleDelete","emailToDelete","method","headers","body","JSON","stringify","console","sx","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","color","mt","textAlign","container","padding","item","xs","sm","md","lg","elevation","p","borderRadius","backgroundColor","variant","mb","fontWeight","map","index","boxShadow","primary","wordBreak","onClick","ml","_c","$RefreshReg$"],"sources":["/Users/marioacosta/Documents/GitHub/SteelsOnline2/frontend/src/components/email/displayemail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Typography, List, ListItem, ListItemText, CircularProgress, Grid, Paper, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nfunction DisplayEmails({ emailRefreshTrigger }) {\n  const [emails, setEmails] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchEmails = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/emails.txt');\n        if (!response.ok) {\n          throw new Error('Failed to fetch emails');\n        }\n        const data = await response.text();\n        const emailList = data.split('\\n').filter(email => email); // Split by new line and filter out empty strings\n        setEmails(emailList);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchEmails();\n  }, [emailRefreshTrigger]); // Re-fetch emails when emailRefreshTrigger changes\n\n  const handleDelete = async (emailToDelete) => {\n    try {\n      const response = await fetch('http://localhost:5001/deleteEmail', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email: emailToDelete }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete email');\n      }\n\n      setEmails(emails.filter(email => email !== emailToDelete));\n    } catch (error) {\n      console.error('Error deleting email:', error);\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Typography color=\"error\" sx={{ mt: 2, textAlign: 'center' }}>\n        Error: {error}\n      </Typography>\n    );\n  }\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: '100vh', padding: 2 }}>\n      <Grid item xs={12} sm={8} md={6} lg={4}>\n        <Paper elevation={3} sx={{ p: 3, borderRadius: 2, backgroundColor: '#f9f9f9' }}>\n          <Typography variant=\"h6\" sx={{ mb: 2, fontWeight: 'bold', textAlign: 'center' }}>\n            Emails from File\n          </Typography>\n          <List>\n            {emails.map((email, index) => (\n              <ListItem\n                key={index}\n                sx={{\n                  backgroundColor: '#fff',\n                  mb: 1,\n                  borderRadius: 1,\n                  boxShadow: 1,\n                  '&:hover': {\n                    backgroundColor: '#f0f0f0',\n                  },\n                }}\n              >\n                <ListItemText primary={email} sx={{ wordBreak: 'break-all' }} />\n                <IconButton\n                  onClick={() => handleDelete(email)}\n                  color=\"primary\" // Change this to match your desired blue\n                  sx={{ ml: 2 }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItem>\n            ))}\n          </List>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default DisplayEmails;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}