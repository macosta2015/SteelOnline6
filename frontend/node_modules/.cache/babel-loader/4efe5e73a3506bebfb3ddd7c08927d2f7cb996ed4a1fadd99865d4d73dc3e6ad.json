{"ast":null,"code":"var _jsxFileName = \"/Users/marioacosta/Documents/GitHub/SteelsOnline2/frontend/src/components/email/emailsender.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport emailjs from 'emailjs-com';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailSender() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [emailList, setEmailList] = useState(['email1@example.com', 'email2@example.com']); // List of recipients\n  const [message, setMessage] = useState('');\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Handle file upload\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n\n  // Upload file and get its URL\n  const uploadFile = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:5001/uploadFile', formData);\n      setUploadedFile(response.data.file); // Assuming the backend responds with the uploaded file URL\n    } catch (err) {\n      setError('Error uploading file');\n    }\n  };\n\n  // Send email to each recipient\n  const sendEmails = async () => {\n    if (!file) {\n      setError('Please upload a file before sending emails.');\n      return;\n    }\n    await uploadFile();\n    emailList.forEach(recipientEmail => {\n      const templateParams = {\n        to_email: recipientEmail,\n        message: message,\n        file_url: `http://localhost:5001${uploadedFile}` // Path to the uploaded file\n      };\n      emailjs.send('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', templateParams, 'YOUR_PUBLIC_KEY').then(response => {\n        console.log('Email sent successfully!', response.status, response.text);\n      }).catch(err => {\n        console.error('Failed to send email:', err);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Send Emails with File Attachment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Write a message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendEmails,\n      children: \"Send Emails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(EmailSender, \"bwY2OfbM4v/dIJF6uKAOhO3/GXY=\");\n_c = EmailSender;\nexport default EmailSender;\nvar _c;\n$RefreshReg$(_c, \"EmailSender\");","map":{"version":3,"names":["React","useState","emailjs","axios","jsxDEV","_jsxDEV","EmailSender","_s","file","setFile","emailList","setEmailList","message","setMessage","uploadedFile","setUploadedFile","error","setError","handleFileChange","event","target","files","uploadFile","formData","FormData","append","response","post","data","err","sendEmails","forEach","recipientEmail","templateParams","to_email","file_url","send","then","console","log","status","text","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","value","e","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/marioacosta/Documents/GitHub/SteelsOnline2/frontend/src/components/email/emailsender.js"],"sourcesContent":["import React, { useState } from 'react';\nimport emailjs from 'emailjs-com';\nimport axios from 'axios';\n\nfunction EmailSender() {\n    const [file, setFile] = useState(null);\n    const [emailList, setEmailList] = useState(['email1@example.com', 'email2@example.com']); // List of recipients\n    const [message, setMessage] = useState('');\n    const [uploadedFile, setUploadedFile] = useState(null);\n    const [error, setError] = useState(null);\n\n    // Handle file upload\n    const handleFileChange = (event) => {\n        setFile(event.target.files[0]);\n    };\n\n    // Upload file and get its URL\n    const uploadFile = async () => {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        try {\n            const response = await axios.post('http://localhost:5001/uploadFile', formData);\n            setUploadedFile(response.data.file); // Assuming the backend responds with the uploaded file URL\n        } catch (err) {\n            setError('Error uploading file');\n        }\n    };\n\n    // Send email to each recipient\n    const sendEmails = async () => {\n        if (!file) {\n            setError('Please upload a file before sending emails.');\n            return;\n        }\n\n        await uploadFile();\n\n        emailList.forEach((recipientEmail) => {\n            const templateParams = {\n                to_email: recipientEmail,\n                message: message,\n                file_url: `http://localhost:5001${uploadedFile}`, // Path to the uploaded file\n            };\n\n            emailjs.send('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', templateParams, 'YOUR_PUBLIC_KEY')\n                .then((response) => {\n                    console.log('Email sent successfully!', response.status, response.text);\n                })\n                .catch((err) => {\n                    console.error('Failed to send email:', err);\n                });\n        });\n    };\n\n    return (\n        <div>\n            <h1>Send Emails with File Attachment</h1>\n            <input type=\"file\" onChange={handleFileChange} />\n            <textarea\n                placeholder=\"Write a message\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n            />\n            <button onClick={sendEmails}>Send Emails</button>\n\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n        </div>\n    );\n}\n\nexport default EmailSender;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}